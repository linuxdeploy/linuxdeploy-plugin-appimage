name: CI

on:
  push:
  pull_request:
  workflow_dispatch:
  schedule:
    # build at least once a month
    - cron: '0 0 1 * *'

jobs:
  appimage:
    strategy:
      matrix:
        arch: ['x86_64', 'i386']
          
    name: AppImage ${{ matrix.arch }}
    runs-on: ubuntu-18.04
    env:
      ARCH: ${{ matrix.ARCH }}
    steps:
      - uses: actions/checkout@v2
        with:
          submodules: recursive
      - name: Install dependencies
        if: ${{ matrix.ARCH == 'i386' }}
        run: |
            sudo dpkg --add-architecture i386
            sudo apt-get update
            sudo apt-get install -y g++-multilib libc6-dev:i386 libstdc++-5-dev:i386 zlib1g:i386 libfuse2:i386
      - name: Build AppImage
        run: bash -ex ci/build-appimage.sh
      - name: Archive artifacts
        uses: actions/upload-artifact@v2
        with:
          name: AppImage ${{ matrix.ARCH }}
          path: linuxdeploy-plugin-appimage*.AppImage*

  container_build:
    # The host should always be linux
    runs-on: ubuntu-latest
    name: AppImage ${{ matrix.arch }}
    strategy:
      fail-fast: false
      matrix:
        distro:
         - bullseye
        arch:
          - aarch64
          - armv7
    steps:
      - uses: actions/checkout@v2.1.0
        with:
          submodules: recursive
      - uses: uraimo/run-on-arch-action@v2.1.1
        name: Build
        id: build
        with:
          arch: ${{ matrix.arch }}
          distro: ${{ matrix.distro }}
          githubToken: ${{ github.token }}
          setup: mkdir -p "${PWD}/artifacts"
          dockerRunArgs: --volume "${PWD}/artifacts:/artifacts"
          shell: /bin/bash
          install: |
            apt-get update -y
            apt-get install -y gcovr libmagic-dev libjpeg-dev libpng-dev libboost-filesystem-dev libboost-regex-dev cimg-dev cmake build-essential git wget libboost-dev patchelf autoconf libc-bin

          run: |
            if [ "${{matrix.arch}}" == "armv7" ]; then
                export ARCH=armhf
            else
                export ARCH=aarch64
            fi
            echo $ARCH

            bash -ex ci/build-appimage.sh
            mv linuxdeploy-plugin*.AppImage* /artifacts
  
      - name: Upload
        uses: actions/upload-artifact@v2
        with:
          path: artifacts/linuxdeploy*.AppImage*

  upload:
    name: Create release and upload artifacts
    needs: [appimage, container_build]
    runs-on: ubuntu-latest
    steps:
      - name: Download artifacts
        uses: actions/download-artifact@v2
      - name: Inspect directory after downloading artifacts
        run: ls -alFR
      - name: Create release and upload artifacts
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
            apt install libfuse2
            wget -q https://github.com/TheAssassin/pyuploadtool/releases/download/continuous/pyuploadtool-x86_64.AppImage
            chmod +x pyuploadtool-x86_64.AppImage
            ./pyuploadtool-x86_64.AppImage **/linuxdeploy-plugin-appimage*.AppImage*
